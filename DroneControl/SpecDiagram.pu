package IngameScript {
    enum Orientation {
        Up
        Down
        Backward
        Forward
        Right
        Left
    }

    package Gyro {
        class GyroControl {
            -List<IMyGyro> ship_gyros

            bool OrientShip(\n\
            Orientation direction,\n\
            Vector3D target,\n\
            IMyTerminalBlock orientation_block,\n\
            double gyro_power = 0.9,\n\
            float min_angle = 5.0f)

            void DisableGyroOveride()
        }
    }

    package Thruster {
        class ThrusterControl {
            -List<IMyThrust> ship_thrusters

            void EnableThrusters(\n\
            List<Orientation> directions,\n\
            ref IDictionary<Orientation,\n\
            List<IMyThrust>> thrusters)
        }
    }

    class DroneControl {
        GyroControl gyros
        ThrusterControl thrusters
    }
}

package Task {

    enum ActionType {
        GoTo
        Follow
    }

    abstract Action {
        const ActionType type

        {abstract} bool Complete()
    }

    class GoTo {
        const type = GoTo
        Vector3D target
        List<Vector3D> route
        tolorance = 10

        bool Complete(Vector3D current_position)
    }

    GoTo .. Action

    class Task {
        List<Action> actions

        Action Get_Next_Action()
    }

    Task <-- GoTo : Contains
}
